
import SynPsg.PDF

subroutine DeliveryTicket
    record
        ticketData      ,strTicketData
        ticketItem      ,[#]strTicketItem
        ticketHazmat    ,[#]strHazmat
        analysis        ,strAnalysis
    endrecord
proc

    ;;Provide some dummy data for the delivery ticket

    ticketData.ticketNumber         = "12345"
    ticketData.customerNumber       = "27850000"
    ticketData.shipDate             = "05/18/16"
    ticketData.soldTo[1]            = "Some Company, Inc"
    ticketData.soldTo[2]            = "1234 Any Street"
    ticketData.soldTo[3]            = "Some Town, CA, 95377"
    ticketData.soldTo[4]            = "U.S.A."
    ticketData.shipTo[1]            = "Some Company, Inc."
    ticketData.shipTo[2]            = "8765 Other Lane"
    ticketData.shipTo[3]            = "Other City, CA, 93775"
    ticketData.shipTo[4]            = "U.S.A."
    ticketData.orderNumber          = "AGS8888432"
    ticketData.salesCode            = "AB53"
    ticketData.creditApproval       = "9724"
    ticketData.typedBy              = "RND"
    ticketData.loadedBy             = "EGF"
    ticketData.checkedBy            = "PSW"
    ticketData.truckNumber          = "AB77772263"
    ticketData.driverName           = "JOHN DOE"
    ticketData.invoiceDate          = "05/18/2016"
    ticketData.invoice1             = "000012222331"
    ticketData.invoice2             = ""
    ticketData.instructions[1]      = "Exercise caution; Bright Yellow Powder can be very unpredictable"
    ticketData.instructions[2]      = "in certain circumstances, and Light Blue Liquid is particularly"
    ticketData.instructions[3]      = "nasty stuff if not handled appropriately."
    ticketData.instructions[4]      = ""
    ticketData.latePercent          = "3.0%"

    ticketItem = new strTicketItem[2]
    ticketItem[1].packages          = "       15"
    ticketItem[1].packageSize       = "    120"
    ticketItem[1].productName       = "Bright Yellow Powder"
    ticketItem[1].productNumber     = "667200"
    ticketItem[1].productVer        = "01"
    ticketItem[1].qtyShipped        = "       1,500"
    ticketItem[1].unit              = "Lbs"
    ticketItem[1].ourOrderNumber    = "23224"
    ticketItem[2].packages          = "      100"
    ticketItem[2].packageSize       = "     15"
    ticketItem[2].productName       = "Light Blue Liquid"
    ticketItem[2].productNumber     = "657301"
    ticketItem[2].productVer        = "03"
    ticketItem[2].qtyShipped        = "       1,000"
    ticketItem[2].unit              = "Gal"
    ticketItem[2].ourOrderNumber    = "23224"

    ticketHazmat = new strHazmat[1]
    ticketHazmat[1].quantity        = "    1,500"
    ticketHazmat[1].unit            = "Lbs"
    ticketHazmat[1].hm              = "Y"
    ticketHazmat[1].description     = "Bright yellow powder"
    ticketHazmat[1].weight          = " 22,500"

    analysis.totalNit               = "1500"
    analysis.availP2O5              = "250"
    analysis.solK2O                 = "275"
    analysis.s                      = "12"
    analysis.zn                     = "6223"
    analysis.other                  = " "
    analysis.acres                  = "1200"
    analysis.perAcre                = "25"

    ;;Create a PDF containing the background data. The name of this file is DeliveryTicketForm.pdf
    ;;This does not need to be done each time. Normally you would implement a check to see if the file
    ;;is already there, and create it if necessary.
    xcall PrintDeliveryTicketForm()

    ;;Create a delivery ticket from the sample data. The background form will be used.
    xcall PrintDeliveryTicket(ticketData,ticketItem,ticketHazmat,analysis)

    xreturn

endsubroutine

subroutine PrintDeliveryTicketForm

    record
        pdf,            @PdfFile
        x1,             float
        y1,             float
        x2,             float
        y2,             float
        arialNarrow,    string
        arialNarrowBold,string
    endrecord
proc
    pdf = new PdfFile(,,,,,,,,,,,"OUTPUT:")

    ;;Override default name to suppress date/time prefix, and and ask reader
    ;;apps to display the file in full page view.
    pdf.FileName = "DeliveryTicketForm.pdf"
    pdf.PageLayout = PdfPageLayout.Single

    ;;Load and embed custom fonts
    arialNarrow     = pdf.LoadTrueTypeFont("MEDIA:ARIALN.TTF")
    arialNarrowBold = pdf.LoadTrueTypeFont("MEDIA:ARIALNB.TTF")

    ;;Top line titles
    pdf.SelectFont(arialNarrowBold,22)
    pdf.DrawText("SOME COMPANY INC.",36,729)
    pdf.SelectFont(arialNarrowBold,14)
    pdf.DrawText("DELIVERY TICKET",490,740)
    pdf.SelectFont(arialNarrowBold,9)
    pdf.DrawText("SHIPPING DOCUMENT",500,731)

    ;;Small text below main title
    pdf.SelectFont(arialNarrow,8)
    pdf.DrawText("DISTRIBUTOR OF SOMETHING",27,720)
    pdf.DrawText("PHONE (555) 555 5555",63,711)
    pdf.DrawText("P.O. BOX 12345",238.5,720)
    pdf.DrawText("SOMETOWN, CA, 55555-5555",216,711)

    ;;TICKET NO box (top)
    pdf.DrawBox(481.5,729,598.5,702)
    pdf.SelectFont(arialNarrow,8)
    pdf.DrawText("TICKET NO.",502,712)

    ;;CUSTOMER NO. box
    pdf.DrawBox(229.5,697.5,288,670.5,,PdfColor.LightPink,true,PdfColor.LightPink)
    pdf.SelectFont(arialNarrow,6)
    pdf.DrawText("CUSTOMER NO.",231,693)

    ;;SHIP DATE box
    pdf.DrawBox(x1=540,y1=697.5,x2=607.5,y2=670.5,,PdfColor.LightPink,true,PdfColor.LightPink)
    pdf.SelectFont(arialNarrow,6)
    pdf.DrawText("SHIP DATE",542,693)

    ;;Sold To and Ship To Headings
    pdf.SelectFont(arialNarrowBold,9)
    pdf.DrawText("BILL TO",2,697.5)
    pdf.DrawText("SHIP TO",320,697.5)

    ;;Main outer box
    pdf.DrawBox(x1=5,y1=634.5,x2=607,y2=54)

    ;;1st black bar
    pdf.DrawBox(x1=5,y1=634.5,x2=607,y2=621,,PdfColor.Black,true,PdfColor.Black)
    ;;White Lines inside 1st black bar
    pdf.StrokeColor = PdfColor.White
    pdf.FillColor = PdfColor.White
    pdf.DrawLine(117,634.5,117,621)
    pdf.DrawLine(153,634.5,153,621)
    pdf.DrawLine(202.5,634.5,202.5,621)
    pdf.DrawLine(252,634.5,252,621)
    pdf.DrawLine(306,634.5,306,621)
    pdf.DrawLine(355.5,634.5,355.5,621)
    pdf.DrawLine(477,634.5,477,621)
    ;;White text in 1st black bar
    pdf.SelectFont(arialNarrow,6)
    pdf.DrawText("CUSTOMER ORDER NUMBER",30,624)
    pdf.DrawText("SALES CODE",118,624)
    pdf.DrawText("CREDIT APPROV.",158,624)
    pdf.DrawText("TYPED BY",216,624)
    pdf.DrawText("LOADED BY",265,624)
    pdf.DrawText("CHECKED BY",313,624)
    pdf.DrawText("TRUCK/TRAILER NO.",385,624)
    pdf.DrawText("DRIVER",535,624)
    pdf.StrokeColor = PdfColor.Black
    pdf.FillColor = PdfColor.Black

    ;;Vertical black Lines between the 1st and 2nd black bars
    pdf.DrawLine(117,621,117,598.5)
    pdf.DrawLine(153,621,153,598.5)
    pdf.DrawLine(202.5,621,202.5,598.5)
    pdf.DrawLine(252,621,252,598.5)
    pdf.DrawLine(306,621,306,598.5)
    pdf.DrawLine(355.5,621,355.5,598.5)
    pdf.DrawLine(477,621,477,598.5)

    ;;2nd black bar
    pdf.DrawBox(x1=5,y1=598.5,x2=607,y2=585,,PdfColor.Black,true,PdfColor.Black)
    ;;White Lines inside 2nd black bar
    pdf.StrokeColor = PdfColor.White
    pdf.FillColor = PdfColor.White
    pdf.DrawLine( 72,598.5, 72,585)         ;after NO OF PKGS
    pdf.DrawLine(130.5,598.5,130.5,585)     ;after PKG SIZE
    pdf.DrawLine(360,591.75,360,585)        ;before PRODUCT NO
    pdf.DrawLine(409.5,591.75,409.5,585)    ;before VER
    pdf.DrawLine(432,598.5,432,585)         ;before QUANTITY SHIPPED
    pdf.DrawLine(526.5,598.5,526.5,585)     ;before UNIT
    pdf.DrawLine(553.5,598.5,553.5,585)     ;before OUR ORDER NUMBER
    pdf.DrawLine(130.5,591.75,432,591.75)   ;Horizontal line in midle of black bar
    ;;White text in 2nd black bar
    pdf.SelectFont(arialNarrow,9)
    pdf.DrawText("NO. OF PKGS.",7,588)
    pdf.DrawText("PKG. SIZE",80,588)
    pdf.SelectFont(arialNarrow,6)
    pdf.DrawText("DESCRIPTION",260,593)
    pdf.DrawText("PRODUCT NAME",210,586)
    pdf.DrawText("PRODUCT NO.",365,586)
    pdf.DrawText("VER.",415,586)
    pdf.SelectFont(arialNarrow,9)
    pdf.DrawText("QUANTITY SHIPPED",443,588)
    pdf.DrawText("UNIT",533,588)
    pdf.SelectFont(arialNarrow,6)
    pdf.DrawText("OUR",563,592)
    pdf.DrawText("ORDER NO.",563,586)
    pdf.StrokeColor = PdfColor.Black
    pdf.FillColor = PdfColor.Black

    ;;Shaded lines in upper main box (top=576, bottom is 396, divided into 15 equal areas)
    ;;So 15 rows of 12 pixels
    pdf.DrawBox(x1=6,y1=578,x2=606,y2=567,,PdfColor.LightPink,true,PdfColor.LightPink)
    pdf.DrawBox(x1=6,y1=554,x2=606,y2=543,,PdfColor.LightGray,true,PdfColor.LightGray)
    pdf.DrawBox(x1=6,y1=530,x2=606,y2=519,,PdfColor.LightPink,true,PdfColor.LightPink)
    pdf.DrawBox(x1=6,y1=506,x2=606,y2=495,,PdfColor.LightGray,true,PdfColor.LightGray)
    pdf.DrawBox(x1=6,y1=482,x2=606,y2=471,,PdfColor.LightPink,true,PdfColor.LightPink)
    pdf.DrawBox(x1=6,y1=458,x2=606,y2=447,,PdfColor.LightGray,true,PdfColor.LightGray)
    pdf.DrawBox(x1=6,y1=434,x2=606,y2=423,,PdfColor.LightPink,true,PdfColor.LightPink)
    pdf.DrawBox(x1=6,y1=410,x2=606,y2=399,,PdfColor.LightGray,true,PdfColor.LightGray)

    ;;Vertical lines between 2nd and 3rd black bars
    pdf.DrawLine(x1= 72,y1=585,x2= 72,y2=391.5)     ;after NO OF PKGS
    pdf.DrawLine(x1=130.5,y1=585,x2=130.5,y2=391.5) ;after PKG size
    pdf.DrawLine(x1=360,y1=585,x2=360,y2=391.5)     ;before PRODUCT NO
    pdf.DrawLine(x1=409.5,y1=585,x2=409.5,y2=391.5) ;before VER
    pdf.DrawLine(x1=432,y1=585,x2=432,y2=391.5)     ;before QUANTITY SHIPPED
    pdf.DrawLine(x1=526.5,y1=585,x2=526.5,y2=391.5) ;before UNIT
    pdf.DrawLine(x1=553.5,y1=585,x2=553.5,y2=391.5) ;after UNIT

    ;;3rd black bar
    pdf.DrawBox(x1=5,y1=391.5,x2=607,y2=378,,PdfColor.Black,true,PdfColor.Black)
    ;;White Lines inside 3rd black bar
    pdf.StrokeColor = PdfColor.White
    pdf.FillColor = PdfColor.White
    pdf.DrawLine( 72,391.5, 72,378) ;after QUANTITY
    pdf.DrawLine(441,391.5,441,378) ;before WEIGHT
    pdf.DrawLine(495,391.5,495,378) ;after WEIGHT
    ;;White text in 3rd black bar
    pdf.SelectFont(arialNarrow,9)
    pdf.DrawText("QUANTITY",20,381)
    pdf.DrawText("UNIT",76,381)
    pdf.DrawBox(x1=99,y1=391.5,x2=121.5,y2=378,,PdfColor.Red,true,PdfColor.Red)  ;Red box for HM
    pdf.DrawText("HM",104,381)
    pdf.DrawText("HAZARDOUS MATERIAL SHIPPING DESCRIPTION",195,381)
    pdf.SelectFont(arialNarrow,8)
    pdf.DrawText("WEIGHT",458,386)
    pdf.SelectFont(arialNarrow,6)
    pdf.DrawText("SUB TO CORRECTION",442,379)
    pdf.SelectFont(arialNarrow,9)
    pdf.DrawText("GUARANTEED ANALYSIS:",505,381)
    pdf.StrokeColor = PdfColor.Black
    pdf.FillColor = PdfColor.Black

    ;;Shaded lines in lower main box (top=374, bottom is 122, divided into 21 equal areas)
    ;;So 21 rows of 12 pixels
    pdf.DrawBox(x1=6,y1=374,x2=494,y2=363,,PdfColor.LightPink,true,PdfColor.LightPink)
    pdf.DrawBox(x1=6,y1=350,x2=494,y2=339,,PdfColor.LightGray,true,PdfColor.LightGray)
    pdf.DrawBox(x1=6,y1=326,x2=494,y2=315,,PdfColor.LightPink,true,PdfColor.LightPink)
    pdf.DrawBox(x1=6,y1=302,x2=494,y2=291,,PdfColor.LightGray,true,PdfColor.LightGray)
    pdf.DrawBox(x1=6,y1=278,x2=494,y2=267,,PdfColor.LightPink,true,PdfColor.LightPink)
    pdf.DrawBox(x1=6,y1=254,x2=494,y2=243,,PdfColor.LightGray,true,PdfColor.LightGray)
    pdf.DrawBox(x1=6,y1=230,x2=494,y2=219,,PdfColor.LightPink,true,PdfColor.LightPink)
    pdf.DrawBox(x1=6,y1=206,x2=494,y2=195,,PdfColor.LightGray,true,PdfColor.LightGray)
    pdf.DrawBox(x1=6,y1=182,x2=494,y2=171,,PdfColor.LightPink,true,PdfColor.LightPink)
    pdf.DrawBox(x1=6,y1=158,x2=494,y2=147,,PdfColor.LightGray,true,PdfColor.LightGray)
    pdf.DrawBox(x1=6,y1=134,x2=494,y2=123,,PdfColor.LightPink,true,PdfColor.LightPink)

    ;;Vertical lines between 3rd black bar and delivery instructions top line
    pdf.DrawLine(x1= 72,y1=378,x2= 72,y2=117)                   ;after QUANTITY
    pdf.DrawLine(x1=99,y1=378,x2=99,y2=117,,PdfColor.Red)       ;before HM
    pdf.DrawLine(x1=121.5,y1=378,x2=121.5,y2=117,,PdfColor.Red) ;after HM
    pdf.DrawLine(x1=441,y1=378,x2=441,y2=117)                   ;before WEIGHT
    pdf.DrawLine(x1=495,y1=378,x2=495,y2=117)                   ;after WEIGHT

    ;;GUARANTEED ANALYSIS
    pdf.SelectFont(arialNarrow,8)
    pdf.DrawText("TOTAL NIT.",508.5,364.5)
    pdf.DrawLine(547,364.5,600,364.5)

    pdf.DrawText("AVAIL P2O5",508.5,353.5)
    pdf.DrawLine(547,353.5,600,353.5)

    pdf.DrawText("SOL K2O",508.5,342)
    pdf.DrawLine(547,342,600,342)

    pdf.DrawText("S",508.5,331)
    pdf.DrawLine(518,331,537,331)
    pdf.DrawText(", ZN",540,331)
    pdf.DrawLine(555,331,600,331)

    pdf.DrawLine(508.5,319.5,600,319.5)

    pdf.DrawText("SPREAD                     ACRES",508.5,309.5)
    pdf.DrawLine(540,309.5,570,309.5)

    pdf.DrawText("AT              LBS. PER ACRE",508.5,297)
    pdf.DrawLine(522,297,539,297)

    ;;Double horizontal lines before CERTIFICATION
    pdf.DrawLine(495,288,607,288)
    pdf.DrawLine(495,283.5,607,283.5)

    pdf.SelectFont(arialNarrow,8)
    pdf.DrawText('CERTIFICATION',532,275)
    pdf.DrawText('"This is to certify that the above',500,266)
    pdf.DrawText('named materials are properly classi-',500,259)
    pdf.DrawText('fied, described, packaged, marked,',500,252)
    pdf.DrawText('and labelled, and are in proper con-',500,245)
    pdf.DrawText('dition for transportation, according',500,238)
    pdf.DrawText('to the applicable regulations of the',500,231)
    pdf.DrawText('Department of Transportation."',500,224)
    pdf.SelectFont(arialNarrowBold,12)
    pdf.DrawText('X',498,196)

    ;;Double horizontal lines before INVOICE DATE
    pdf.DrawLine(495,193.5,607,193.5)
    pdf.DrawLine(495,189,607,189)
    pdf.SelectFont(arialNarrow,8)
    pdf.DrawText("INVOICE DATE",498,182)

    ;;Double horizontal lines before INVOICE NOS.
    pdf.DrawLine(495,157.5,607,157.5)
    pdf.DrawLine(495,153,607,153)
    pdf.SelectFont(arialNarrow,8)
    pdf.DrawText("INVOICE NOS.",498,146)

    ;Horizontal line above delivery instructions
    pdf.DrawLine(x1=5,y1=117,x2=607,y2=117)

    pdf.SelectFont(arialNarrow,8)
    pdf.DrawText("DELIVERY",7,109)
    pdf.DrawText("INSTRUCTIONS:",7,100)

    ;;Signature line (REC'D BY)
    pdf.SelectFont(arialNarrow,8)
    pdf.DrawText("REC'D",425,45)
    pdf.DrawText("BY:",435,37)
    pdf.SelectFont(arialNarrowBold,12)
    pdf.DrawText('X',450,40)
    pdf.DrawLine(450,36,607,36)

    pdf.SelectFont(arialNarrowBold,8)
    pdf.DrawText("LATE PAYMENT PENALTY PER MONTH ON PART DUE ACCOUNTS, ALL ORDERS SUBJECT TO OFFICE APPROVAL,",36,36)
    pdf.DrawText("PRICE CHANGE, AND GOODS AVAILABLE. NO MERCHANDISE RETURNS UNLESS AUTHORIZED BY PREVIOUS CORRESPONDENCE.",9,27)

    pdf.SelectFont(arialNarrowBold,12)
    pdf.DrawText("ORIGINAL                             EMERGENCY -- 555-555-5555 -- CHEM TREC # CC55555",30,9,PdfColor.Red)

    ;;TICKET NO box (bottom)
    pdf.DrawBox(x1=486,y1=31.5,x2=603,y2=9)
    pdf.SelectFont(arialNarrow,8)
    pdf.DrawText("TICKET NO.",490.5,18)

    ;;Save the PDF to disk
    pdf.Save()

    xreturn

endsubroutine

subroutine PrintDeliveryTicket

    required in ticketData,     strTicketData
    required in ticketItem,     [#]strTicketItem
    required in ticketHazmat,   [#]strHazmat
    required in analysis,       strAnalysis

    record
        pdf, @PdfFile
        errmsg, string
    endrecord
proc
    ;;Create an instance of the PdfFile class
    pdf = new PdfFile(,,,,,,,,,,,"OUTPUT:")

    .ifdef D_GUI
    ;;Name the file that defines the background content (the "pre-printed" form)
    if (!pdf.SetBackgroundFile("OUTPUT:DeliveryTicketForm.pdf",errmsg))
        throw new Exception(errmsg)
    .else
    throw new Exception("This example is only supported on Windows!")
    .endc

    ;;Override default name to suppress date/time prefix, and and ask reader
    ;;apps to display the file in full page view.
    pdf.FileName = "DeliveryTicket.pdf"
    pdf.PageLayout = PdfPageLayout.Single

    pdf.SelectFont("Courier",12)

    pdf.DrawText(ticketData.ticketNumber,555,711)
    pdf.DrawText(%atrim(ticketData.customerNumber),230,675)
    pdf.DrawText(%atrim(ticketData.shipDate),544,675)

    ;;Sold To
    pdf.DrawText(%atrim(ticketData.soldTo(1)),2,684)
    pdf.DrawText(%atrim(ticketData.soldTo[2]),2,670.5)
    pdf.DrawText(%atrim(ticketData.soldTo[3]),2,657)
    pdf.DrawText(%atrim(ticketData.soldTo[4]),2,643.5)

    ;;Ship To:
    pdf.DrawText(%atrim(ticketData.shipTo[1]),320,684)
    pdf.DrawText(%atrim(ticketData.shipTo[2]),320,670.5)
    pdf.DrawText(%atrim(ticketData.shipTo[3]),320,657)
    pdf.DrawText(%atrim(ticketData.shipTo[4]),320,643.5)

    pdf.DrawText(%atrim(ticketData.orderNumber),6,606)
    pdf.DrawText(%atrim(ticketData.salesCode),119,606)
    pdf.DrawText(%atrim(ticketData.creditApproval),155,606)
    pdf.DrawText(%atrim(ticketData.typedBy),204,606)
    pdf.DrawText(%atrim(ticketData.loadedBy),254,606)
    pdf.DrawText(%atrim(ticketData.checkedBy),308,606)
    pdf.DrawText(%atrim(ticketData.truckNumber),357,606)
    pdf.DrawText(%atrim(ticketData.driverName),479,606)

    ;;Upper box
    begin
        data ix, int
        data iy, int, 0
        for ix from 569 thru 400 by -12
        begin
            data yPos, float, ix
            if ((iy+=1)>ticketItem.Length)
                exitloop
            pdf.DrawText(ticketItem[iy].packages,6,yPos)
            pdf.DrawText(ticketItem[iy].packageSize,77,yPos)
            pdf.DrawText(ticketItem[iy].productName,134,yPos)
            pdf.DrawText(ticketItem[iy].productNumber,363,yPos)
            pdf.DrawText(ticketItem[iy].productVer,413,yPos)
            pdf.DrawText(ticketItem[iy].qtyShipped,435,yPos)
            pdf.DrawText(ticketItem[iy].unit,529,yPos)
            pdf.DrawText(ticketItem[iy].ourOrderNumber,558,yPos)
        end
    end

    ;;Lower box
    begin
        data ix, int
        data iy, int, 0
        for ix from 365 thru 125 by -12
        begin
            data yPos, float, ix
            if ((iy+=1)>ticketHazmat.Length)
                exitloop
            pdf.DrawText(ticketHazmat[1].quantity,6,yPos)
            pdf.DrawText(ticketHazmat[1].unit,77,yPos)
            pdf.DrawText(ticketHazmat[1].hm,103,yPos)
            pdf.DrawText(ticketHazmat[1].description,125,yPos)
            pdf.DrawText(ticketHazmat[1].weight,443,yPos)
        end
    end

    ;;Guaranteed analysis
    pdf.SelectFont("Courier",10)
    pdf.DrawText(analysis.totalNit,549,366)
    pdf.DrawText(analysis.availP2O5,549,355)
    pdf.DrawText(analysis.solK2O,549,344)
    pdf.DrawText(analysis.s,517,333)
    pdf.DrawText(analysis.zn,557,333)
    pdf.DrawText(analysis.other,509,321)
    pdf.DrawText(analysis.acres,542,311)
    pdf.DrawText(analysis.perAcre,524,299)

    pdf.SelectFont("Courier",12)

    pdf.DrawText(ticketData.invoiceDate,510,168)
    pdf.DrawText(ticketData.invoice1,510,135)
    pdf.DrawText(ticketData.invoice2,510,125)

    ;;Delivery instructions
    pdf.DrawText(ticketData.instructions[1],90,99)
    pdf.DrawText(ticketData.instructions[2],90,90)
    pdf.DrawText(ticketData.instructions[3],90,81)
    pdf.DrawText(ticketData.instructions[4],90,72)

    pdf.DrawText(ticketData.latePercent,6,36)

    pdf.DrawText(ticketData.ticketNumber,555,18)

    ;;-----------------------------------------------------------------------------------------
    ;;And show it

    pdf.Preview()

    xreturn

endsubroutine

structure strTicketData
    ticketNumber    ,a5
    customerNumber  ,a8
    shipDate        ,a8
    soldTo          ,[4]a30
    shipTo          ,[4]a30
    orderNumber     ,a15
    salesCode       ,a4
    creditApproval  ,a6
    typedBy         ,a6
    loadedBy        ,a6
    checkedBy       ,a6
    truckNumber     ,a15
    driverName      ,a15
    invoiceDate     ,a10
    invoice1        ,a12
    invoice2        ,a12
    instructions    ,[4]a70
    latePercent     ,a4
endstructure

structure strTicketItem
    packages        ,a9
    packageSize     ,a7
    productName     ,a30
    productNumber   ,a6
    productVer      ,a2
    qtyShipped      ,a12
    unit            ,a3
    ourOrderNumber  ,a6
endstructure

structure strHazmat
    quantity        ,a9
    unit            ,a3
    hm              ,a2
    description     ,a40
    weight          ,a7
endstructure

structure strAnalysis
    totalNit        ,a8
    availP2O5       ,a8
    solK2O          ,a8
    s               ,a3
    zn              ,a7
    other           ,a15
    acres           ,a4
    perAcre         ,a2
endstructure


