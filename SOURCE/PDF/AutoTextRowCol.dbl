;;*****************************************************************************
;;
;; File:        AutoTextRowCol.dbl
;;
;; Type:        Class
;;
;; Description: Represents text that is to be drawn on the page of a PDF
;;              document using row/column coordinates.
;;
;; Date:        19th July 2015
;;
;; Author:      Steve Ives, Synergex Professional Services Group
;;              http://www.synergex.com
;;
;;*****************************************************************************
;;
;; Copyright (c) 2015, Synergex International, Inc.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************

namespace SynPSG.PDF

    ;;; <summary>
    ;;; Represents text that is to be drawn on the page of a PDF document using row/column coordinates.
    ;;; </summary>
    public class AutoTextRowCol extends AutoText

        public method AutoTextRowCol
            required in aText,      string
            optional in aRow,       n
            optional in aCol,       n
.ifdef DBLNET
            default  in aBold,      boolean,        false
            default  in aItalic,    boolean,        false
            default  in aColor,     PdfColor,       PdfColor.DefaultColor
            default  in aNewLine,   boolean,        false
            default  in aMode,      AutoItemMode,   AutoItemMode.DefaultMode
            default  in aUnderline, boolean,        false
.else
            optional in aBold,      boolean
            optional in aItalic,    boolean
            optional in aColor,     PdfColor
            optional in aNewLine,   boolean
            optional in aMode,      AutoItemMode
            optional in aUnderline, boolean
.endc
            endparams
            parent(aText,aColor,aUnderline,aMode)
        proc

            if (^passed(aRow))
                mRow  = aRow

            if (^passed(aCol))
                mCol  = aCol

.ifdef DBLNET
            mBold = aBold
.else
            if (^passed(aBold))
                mBold = aBold
.endc

.ifdef DBLNET
            mItalic = aItalic
.else
            if (^passed(aItalic))
                mItalic = aItalic
.endc

.ifdef DBLNET
            mNewLine = aNewLine
.else
            if (^passed(aNewLine))
                mNewLine = aNewLine
.endc

        endmethod

        private mRow, int, 0

        public property Row, int
            method get
            proc
                mreturn mRow
            endmethod
            method set
            proc
                mRow = value
            endmethod
        endproperty

        private mCol, int, 0

        public property Col, int
            method get
            proc
                mreturn mCol
            endmethod
            method set
            proc
                mCol = value
            endmethod
        endproperty

        private mBold, boolean, false

        public property Bold, boolean
            method get
            proc
                mreturn mBold
            endmethod
            method set
            proc
                mBold = value
            endmethod
        endproperty

        private mItalic, boolean, false

        public property Italic, boolean
            method get
            proc
                mreturn mItalic
            endmethod
            method set
            proc
                mItalic = value
            endmethod
        endproperty

        private mNewLine, boolean, false

        public property NewLine, boolean
            method get
            proc
                mreturn mNewLine
            endmethod
            method set
            proc
                mNewLine = value
            endmethod
        endproperty

    endclass

endnamespace
