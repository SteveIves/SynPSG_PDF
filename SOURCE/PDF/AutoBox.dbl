;;*****************************************************************************
;;
;; File:        AutoBox.dbl
;;
;; Type:        Class
;;
;; Description: Abstract base class for all auto box classes.
;;
;; Date:        19th July 2015
;;
;; Author:      Steve Ives, Synergex Professional Services Group
;;              http://www.synergex.com
;;
;;*****************************************************************************
;;
;; Copyright (c) 2015, Synergex International, Inc.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are met:
;;
;; * Redistributions of source code must retain the above copyright notice,
;;   this list of conditions and the following disclaimer.
;;
;; * Redistributions in binary form must reproduce the above copyright notice,
;;   this list of conditions and the following disclaimer in the documentation
;;   and/or other materials provided with the distribution.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
;; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
;; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
;; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
;; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
;; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
;; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
;; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
;; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
;; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
;; POSSIBILITY OF SUCH DAMAGE.
;;
;;*****************************************************************************

namespace SynPSG.PDF

    ;;; <summary>
    ;;; Abstract base class for all auto box classes
    ;;; </summary>
    public abstract class AutoBox extends AutoLine

        public method AutoBox
.ifdef DBLNET
            default  in aWidth,       float,        1
            default  in aStrokeColor, PdfColor,     PdfColor.DefaultColor
            default  in aFill,        boolean,      false
            default  in aFillColor,   PdfColor,     PdfColor.DefaultColor
            default  in aMode,        AutoItemMode, AutoItemMode.DefaultMode
.else
            optional in aWidth,       float
            optional in aStrokeColor, PdfColor
            optional in aFill,        boolean
            optional in aFillColor,   PdfColor
            optional in aMode,        AutoItemMode
.endc
            endparams
            parent(aWidth,aStrokeColor,aMode)
        proc

.ifdef DBLNET
            mFill = aFill
.else
            if (^passed(aFill))
                mFill = aFill
.endc

.ifdef DBLNET
            if (aFillColor!=PdfColor.DefaultColor)
.else
            if (^passed(aFillColor))
.endc
                mFillColor = aFillColor

        endmethod

        private mFill, boolean, false

        public property Fill, boolean
            method get
            proc
                mreturn mFill
            endmethod
            method set
            proc
                mFill = value
            endmethod
        endproperty

        private mFillColor, PdfColor, PdfColor.Black

        public property FillColor, PdfColor
            method get
            proc
                mreturn mFillColor
            endmethod
            method set
            proc
                mFillColor = value
            endmethod
        endproperty

    endclass

endnamespace
